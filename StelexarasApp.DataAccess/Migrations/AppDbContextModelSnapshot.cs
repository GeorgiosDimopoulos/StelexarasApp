// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StelexarasApp.DataAccess;

#nullable disable

namespace StelexarasApp.Library.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StelexarasApp.Library.Models.Atoma.Paidi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaidiType")
                        .HasColumnType("int");

                    b.Property<bool>("SeAdeia")
                        .HasColumnType("bit");

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.Property<int>("SkiniId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SkiniId");

                    b.ToTable("Paidia");
                });

            modelBuilder.Entity("StelexarasApp.Library.Models.Atoma.Staff.Ekpaideutis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Thesi")
                        .HasColumnType("int");

                    b.Property<string>("XwrosName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Tel")
                        .IsUnique();

                    b.ToTable("Ekpaideutes");
                });

            modelBuilder.Entity("StelexarasApp.Library.Models.Atoma.Staff.Koinotarxis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Thesi")
                        .HasColumnType("int");

                    b.Property<int?>("TomearxisId")
                        .HasColumnType("int");

                    b.Property<string>("XwrosName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Tel")
                        .IsUnique();

                    b.HasIndex("TomearxisId");

                    b.ToTable("Koinotarxes");
                });

            modelBuilder.Entity("StelexarasApp.Library.Models.Atoma.Staff.Omadarxis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KoinotarxisId")
                        .HasColumnType("int");

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Thesi")
                        .HasColumnType("int");

                    b.Property<string>("XwrosName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KoinotarxisId");

                    b.HasIndex("Tel")
                        .IsUnique();

                    b.ToTable("Omadarxes");
                });

            modelBuilder.Entity("StelexarasApp.Library.Models.Atoma.Staff.Tomearxis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.Property<string>("Tel")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Thesi")
                        .HasColumnType("int");

                    b.Property<string>("XwrosName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Tel")
                        .IsUnique();

                    b.ToTable("Tomearxes");
                });

            modelBuilder.Entity("StelexarasApp.Library.Models.Domi.Koinotita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("KoinotarxisId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TomeasId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KoinotarxisId")
                        .IsUnique()
                        .HasFilter("[KoinotarxisId] IS NOT NULL");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("TomeasId");

                    b.ToTable("Koinotites");
                });

            modelBuilder.Entity("StelexarasApp.Library.Models.Domi.Skini", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KoinotitaId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("OmadarxisId")
                        .HasColumnType("int");

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KoinotitaId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("OmadarxisId")
                        .IsUnique()
                        .HasFilter("[OmadarxisId] IS NOT NULL");

                    b.ToTable("Skines");
                });

            modelBuilder.Entity("StelexarasApp.Library.Models.Domi.Tomeas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TomearxisId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("TomearxisId")
                        .IsUnique()
                        .HasFilter("[TomearxisId] IS NOT NULL");

                    b.ToTable("Tomeis");
                });

            modelBuilder.Entity("StelexarasApp.Library.Models.Duty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Duties");
                });

            modelBuilder.Entity("StelexarasApp.Library.Models.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("StelexarasApp.Library.Models.Atoma.Paidi", b =>
                {
                    b.HasOne("StelexarasApp.Library.Models.Domi.Skini", "Skini")
                        .WithMany("Paidia")
                        .HasForeignKey("SkiniId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skini");
                });

            modelBuilder.Entity("StelexarasApp.Library.Models.Atoma.Staff.Koinotarxis", b =>
                {
                    b.HasOne("StelexarasApp.Library.Models.Atoma.Staff.Tomearxis", null)
                        .WithMany("Koinotarxes")
                        .HasForeignKey("TomearxisId");
                });

            modelBuilder.Entity("StelexarasApp.Library.Models.Atoma.Staff.Omadarxis", b =>
                {
                    b.HasOne("StelexarasApp.Library.Models.Atoma.Staff.Koinotarxis", null)
                        .WithMany("Omadarxes")
                        .HasForeignKey("KoinotarxisId");
                });

            modelBuilder.Entity("StelexarasApp.Library.Models.Domi.Koinotita", b =>
                {
                    b.HasOne("StelexarasApp.Library.Models.Atoma.Staff.Koinotarxis", "Koinotarxis")
                        .WithOne("Koinotita")
                        .HasForeignKey("StelexarasApp.Library.Models.Domi.Koinotita", "KoinotarxisId");

                    b.HasOne("StelexarasApp.Library.Models.Domi.Tomeas", "Tomeas")
                        .WithMany("Koinotites")
                        .HasForeignKey("TomeasId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Koinotarxis");

                    b.Navigation("Tomeas");
                });

            modelBuilder.Entity("StelexarasApp.Library.Models.Domi.Skini", b =>
                {
                    b.HasOne("StelexarasApp.Library.Models.Domi.Koinotita", "Koinotita")
                        .WithMany("Skines")
                        .HasForeignKey("KoinotitaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StelexarasApp.Library.Models.Atoma.Staff.Omadarxis", "Omadarxis")
                        .WithOne("Skini")
                        .HasForeignKey("StelexarasApp.Library.Models.Domi.Skini", "OmadarxisId");

                    b.Navigation("Koinotita");

                    b.Navigation("Omadarxis");
                });

            modelBuilder.Entity("StelexarasApp.Library.Models.Domi.Tomeas", b =>
                {
                    b.HasOne("StelexarasApp.Library.Models.Atoma.Staff.Tomearxis", "Tomearxis")
                        .WithOne("Tomeas")
                        .HasForeignKey("StelexarasApp.Library.Models.Domi.Tomeas", "TomearxisId");

                    b.Navigation("Tomearxis");
                });

            modelBuilder.Entity("StelexarasApp.Library.Models.Atoma.Staff.Koinotarxis", b =>
                {
                    b.Navigation("Koinotita")
                        .IsRequired();

                    b.Navigation("Omadarxes");
                });

            modelBuilder.Entity("StelexarasApp.Library.Models.Atoma.Staff.Omadarxis", b =>
                {
                    b.Navigation("Skini")
                        .IsRequired();
                });

            modelBuilder.Entity("StelexarasApp.Library.Models.Atoma.Staff.Tomearxis", b =>
                {
                    b.Navigation("Koinotarxes");

                    b.Navigation("Tomeas")
                        .IsRequired();
                });

            modelBuilder.Entity("StelexarasApp.Library.Models.Domi.Koinotita", b =>
                {
                    b.Navigation("Skines");
                });

            modelBuilder.Entity("StelexarasApp.Library.Models.Domi.Skini", b =>
                {
                    b.Navigation("Paidia");
                });

            modelBuilder.Entity("StelexarasApp.Library.Models.Domi.Tomeas", b =>
                {
                    b.Navigation("Koinotites");
                });
#pragma warning restore 612, 618
        }
    }
}
